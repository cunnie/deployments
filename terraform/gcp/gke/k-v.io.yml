---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: etcd-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k-v.io
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k-v.io-etcd
  template:
    metadata:
      name: k-v.io-pod
      labels:
        app: k-v.io-etcd
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: etcd
        image: gcr.io/etcd-development/etcd:v3.5.6
        imagePullPolicy: Always
        ports:
        - containerPort: 2379
          protocol: TCP
        - containerPort: 2380
          protocol: TCP
        resources:
          requests:
            memory: 128Mi # ns-aws's etcd has an RSS of 40Mi
        env:
        - name: ETCD_NAME
          value: ns-gce
        - name: ETCD_DATA_DIR
          value: "/etcd-data/data" # fixes "found invalid file/dir lost+found under data dir /etcd-data"
        - name: ETCD_LISTEN_PEER_URLS
          value: https://0.0.0.0:2380
        - name: ETCD_LISTEN_CLIENT_URLS
          value: http://0.0.0.0:2379
        - name: ETCD_INITIAL_ADVERTISE_PEER_URLS
          value: https://ns-gce.sslip.io:2380
        - name: ETCD_INITIAL_CLUSTER
          value: ns-aws=https://ns-aws.sslip.io:2380,ns-azure=https://ns-azure.sslip.io:2380,ns-gce=https://ns-gce.sslip.io:2380
        - name: ETCD_INITIAL_CLUSTER_STATE
          value: existing # the cluster already exists; this deployment is a latecomer
        - name: ETCD_INITIAL_CLUSTER_TOKEN
          value: etcd-cluster
        - name: ETCD_ADVERTISE_CLIENT_URLS
          value: http://localhost:2379
        - name: ETCD_CERT_FILE
          value: "/etcd-peer-tls/etcd.pem"
        - name: ETCD_KEY_FILE
          value: "/etcd-peer-tls/etcd-key.pem"
        - name: ETCD_TRUSTED_CA_FILE
          value: "/etcd-peer-tls/ca.pem"
        - name: ETCD_PEER_CERT_FILE
          value: "/etcd-peer-tls/etcd.pem"
        - name: ETCD_PEER_KEY_FILE
          value: "/etcd-peer-tls/etcd-key.pem"
        - name: ETCD_PEER_CLIENT_CERT_AUTH
          value: "true"
        - name: ETCD_PEER_TRUSTED_CA_FILE
          value: "/etcd-peer-tls/ca.pem"
        livenessProbe:
          exec:
            command:
            - nc
            - -z
            - localhost
            - "2380"
          periodSeconds: 300
        volumeMounts:
        - name: etcd-peer-tls
          mountPath: /etcd-peer-tls
        - name: etcd-data
          mountPath: /etcd-data
      volumes:
      - name: etcd-peer-tls
        secret:
          secretName: etcd-peer-tls
      - name: etcd-data
        persistentVolumeClaim:
          claimName: etcd-data
---
apiVersion: v1
kind: Service
metadata:
  name: k-v-io-etcd-cluster # must be DNS-compliant
spec:
  ports:
  - name: etcd-client
    port: 2379
  - name: etcd-peer
    port: 2380
  selector:
    app: k-v.io-etcd
---
apiVersion: v1
kind: Service
metadata:
  name: k-v-io-etcd
  namespace: default
  annotations:
    cloud.google.com/network-tier: "Standard"
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  loadBalancerIP: 104.155.144.4
  ports:
  - name: etcd-peer
    port: 2380
  selector:
    app: k-v.io-etcd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k-v.io-nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: k-v.io-nginx
  template:
    metadata:
      name: k-v.io-nginx
      labels:
        app: k-v.io-nginx
    spec:
      containers:
      - name: sslip-nginx-container
        image: cunnie/k-v.io-nginx
        ports:
        - containerPort: 80
          protocol: TCP
        resources:
          requests:
            memory: 32Mi
        livenessProbe:
          httpGet:
            path: /
            port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: k-v-io-nginx-cluster
spec:
  ports:
  - port: 80
  selector:
    app: k-v.io-nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: k-v.io-nginx
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - k-v.io
    secretName: k-v.io
  rules:
  - host: k-v.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: k-v-io-nginx-cluster
            port:
              number: 80
